### меняем логин и пароль на токен

POST http://localhost:9999/api/token
Content-Type: application/x-www-form-urlencoded

login=user&password=secret

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json' but received '" + response.contentType.mimeType + "'");
  client.global.set("token", response.body.token);
});
%}

### проверяем транзакции

GET http://localhost:9999/api/transactions
Authorization: {{token}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json' but received '" + response.contentType.mimeType + "'");
});
%}

### создаём платёж (см. лог docker-compose)

POST http://localhost:9999/api/payments
Authorization: {{token}}
Content-Type: application/json

{
  "amount": 1000,
  "category": "auto"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### проверяем транзакции

GET http://localhost:9999/api/transactions
Authorization: {{token}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json' but received '" + response.contentType.mimeType + "'");
});
%}
